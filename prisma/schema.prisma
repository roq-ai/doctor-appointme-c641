generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model appointment {
  id                                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  appointment_date                  DateTime @db.Timestamp(6)
  appointment_time                  String   @db.VarChar(255)
  status                            String   @db.VarChar(255)
  patient_id                        String   @db.Uuid
  clinic_id                         String   @db.Uuid
  doctor_id                         String   @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  clinic                            clinic   @relation(fields: [clinic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_appointment_doctor_idTouser  user     @relation("appointment_doctor_idTouser", fields: [doctor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_appointment_patient_idTouser user     @relation("appointment_patient_idTouser", fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model clinic {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?         @db.VarChar(255)
  location      String?         @db.VarChar(255)
  opening_hours String?         @db.VarChar(255)
  closing_hours String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  appointment   appointment[]
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  medical_staff medical_staff[]
}

model healthcare_provider {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider_name    String   @db.VarChar(255)
  provider_address String   @db.VarChar(255)
  contact_number   String   @db.VarChar(20)
  email            String   @db.VarChar(255)
  user_id          String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model insurance_provider {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider_name    String   @db.VarChar(255)
  provider_address String   @db.VarChar(255)
  contact_number   String   @db.VarChar(20)
  email            String   @db.VarChar(255)
  user_id          String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model medical_staff {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  staff_name     String   @db.VarChar(255)
  staff_position String   @db.VarChar(255)
  contact_number String   @db.VarChar(20)
  email          String   @db.VarChar(255)
  clinic_id      String   @db.Uuid
  user_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  clinic         clinic   @relation(fields: [clinic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                    String                @unique @db.VarChar(255)
  firstName                                String?               @db.VarChar(255)
  lastName                                 String?               @db.VarChar(255)
  roq_user_id                              String                @db.VarChar(255)
  tenant_id                                String                @db.VarChar(255)
  created_at                               DateTime              @default(now()) @db.Timestamp(6)
  updated_at                               DateTime              @default(now()) @db.Timestamp(6)
  appointment_appointment_doctor_idTouser  appointment[]         @relation("appointment_doctor_idTouser")
  appointment_appointment_patient_idTouser appointment[]         @relation("appointment_patient_idTouser")
  clinic                                   clinic[]
  healthcare_provider                      healthcare_provider[]
  insurance_provider                       insurance_provider[]
  medical_staff                            medical_staff[]
}
